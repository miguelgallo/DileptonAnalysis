ntp1 - Analyzer criado com o MakeClass, onde cortes de seleção são aplicados e histogramas de interesse são feitos.
       MakeClass - root <arquivo.root> -l
                   _file0->ls()
                   _file0->cd("<diretorio>")
                   _file0->ls()
                   auto data = (TTree*)(_file0->Get("<caminho/ttree>"))
                   data
                   data->MakeClass()
CompHistos - Comparador de ntuplas de dados com de Monte Carlo
sub_all.sh - Script que copia o input desejado da EOS, roda o analyzer em cima, gerando um arquivo de output,
             move o output para as pastas "histos" e exclui o arquivo input.
             source sub_all.sh - Rodar o script.
             
Ordem de processamento: Gerar um .root de pileup a partir dos dados (muon ou EG) utilizando o analyzer dentro da pasta
                        "pileup_protons", rodar o script "sub_all.sh" para obter os .root com os cortes de seleção e
                        rodar o "CompHistos.C" para comparar os histogramas gerados anteriormente.                  
                        
Resample: Precisamos combinar os protons de pileup dos dados com os eventos de ruído de Monte Carlo (DY e double diss). 
          Podemos usar os mesmos eventos para fazer combinações diferentes, obtendo assim "novos" eventos. 
          Por exemplo, combinando dois eventos de pileup com apenas um de MC teremos dois eventos distintos. 
          Com isso, podemos aumentar a estatística de eventos de ruído, ao aumentar o número de eventos gerados e 
          normalizar na hora de fazer a distribuição.
